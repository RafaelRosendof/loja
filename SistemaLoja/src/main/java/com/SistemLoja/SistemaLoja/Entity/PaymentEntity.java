package com.SistemLoja.SistemaLoja.Entity;

import java.time.LocalDateTime;

import java.math.BigDecimal;
import com.SistemLoja.SistemaLoja.Aux.CryptoConvert;

import jakarta.persistence.Convert;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

/**
 * Entity class to load the payments information on the database, it's gonna be
 * encrypted using the CryptoConvert class.
 * This class is not used yet, but it will be used in the future to manage the
 * payments in the system.
 * Don't need to implement REST, the Aux PixQr class gonna handle the saves
 * 
 * id
 * - the id of the payment, it's gonna be auto generated by the database
 * amount
 * - the amount of the payment, it's gonna be a BigDecimal
 * paymentMethod
 * - the payment method, it's gonna be a String, can be "PIX", "CRYPTO",
 * "CREDIT_CARD", "DEBIT_CARD", "BOLETO"
 * status
 * - the status of the payment, it's gonna be a String, can be "PENDING",
 * "COMPLETED", "CANCELED"
 * createdAt
 * - the date and time when the payment was created, it's gonna be a
 * LocalDateTime
 * updatedAt
 * - the date and time when the payment was updated, it's gonna be a
 * LocalDateTime
 * 
 * If gonna be in Crypto, gonna need to have the string of public qrcode base64
 */

@Entity
@Table(name = "payment")
public class PaymentEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)

    @Column(name = "id")
    private int id;

    @Convert(converter = CryptoConvert.class)
    @Column(name = "amount")
    private BigDecimal amount;

    @Convert(converter = CryptoConvert.class)
    @Column(name = "payment_method")
    private String paymentMethod;

    @Convert(converter = CryptoConvert.class)
    @Column(name = "status")
    private String status;

    @Column(name = "created_at")
    private LocalDateTime createdAt;

    @Column(name = "updated_at")
    private LocalDateTime updatedAt;

    @Column(name = "public_qrcode")
    private String publicQrcode;

    public PaymentEntity() {
    }

    public PaymentEntity(int id, BigDecimal amount, String paymentMethod, String status, LocalDateTime createdAt,
            LocalDateTime updatedAt, String publicQrcode) {
        this.id = id;
        this.amount = amount;
        this.paymentMethod = paymentMethod;
        this.status = status;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.publicQrcode = publicQrcode;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public BigDecimal getAmount() {
        return amount;
    }

    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    public String getPaymentMethod() {
        return paymentMethod;
    }

    public void setPaymentMethod(String paymentMethod) {
        this.paymentMethod = paymentMethod;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public String getPublicQrcode() {
        return publicQrcode;
    }

    public void setPublicQrcode(String publicQrcode) {
        this.publicQrcode = publicQrcode;
    }
}
